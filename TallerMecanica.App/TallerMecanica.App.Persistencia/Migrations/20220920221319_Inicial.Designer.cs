// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TallerMecanica.App.Persistencia.AppRepositorios;

namespace TallerMecanica.App.Persistencia.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220920221319_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("TallerMecanica.App.Dominio.Entidades.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroIdentificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("TallerMecanica.App.Dominio.Entidades.Repuesto", b =>
                {
                    b.Property<int>("RepuestoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("NombreRespuesto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RevisionMatenimientoId")
                        .HasColumnType("int");

                    b.HasKey("RepuestoId");

                    b.HasIndex("RevisionMatenimientoId");

                    b.ToTable("Repuestos");
                });

            modelBuilder.Entity("TallerMecanica.App.Dominio.Entidades.Revision", b =>
                {
                    b.Property<int>("MatenimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("EstadoAceite")
                        .HasColumnType("int");

                    b.Property<int>("EstadoFiltroAire")
                        .HasColumnType("int");

                    b.Property<int>("EstadoFiltroGasolina")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaMantenimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("ObservacionMantenimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SuTecnicoTecnicoId")
                        .HasColumnType("int");

                    b.Property<string>("SuVehiculoVehiculoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TipoMantenimiento")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("MatenimientoId");

                    b.HasIndex("SuTecnicoTecnicoId");

                    b.HasIndex("SuVehiculoVehiculoId");

                    b.ToTable("Revisiones");
                });

            modelBuilder.Entity("TallerMecanica.App.Dominio.Entidades.Tecnico", b =>
                {
                    b.Property<int>("TecnicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaContrato")
                        .HasColumnType("datetime2");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroIdentificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TecnicoId");

                    b.ToTable("Tecnicos");
                });

            modelBuilder.Entity("TallerMecanica.App.Dominio.Entidades.Vehiculo", b =>
                {
                    b.Property<string>("VehiculoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehiculoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("TallerMecanica.App.Dominio.Entidades.Repuesto", b =>
                {
                    b.HasOne("TallerMecanica.App.Dominio.Entidades.Revision", null)
                        .WithMany("SusRepuestos")
                        .HasForeignKey("RevisionMatenimientoId");
                });

            modelBuilder.Entity("TallerMecanica.App.Dominio.Entidades.Revision", b =>
                {
                    b.HasOne("TallerMecanica.App.Dominio.Entidades.Tecnico", "SuTecnico")
                        .WithMany("SusRevisiones")
                        .HasForeignKey("SuTecnicoTecnicoId");

                    b.HasOne("TallerMecanica.App.Dominio.Entidades.Vehiculo", "SuVehiculo")
                        .WithMany("SusRevisiones")
                        .HasForeignKey("SuVehiculoVehiculoId");

                    b.Navigation("SuTecnico");

                    b.Navigation("SuVehiculo");
                });

            modelBuilder.Entity("TallerMecanica.App.Dominio.Entidades.Vehiculo", b =>
                {
                    b.HasOne("TallerMecanica.App.Dominio.Entidades.Cliente", "SuPropietario")
                        .WithMany("Vehiculos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SuPropietario");
                });

            modelBuilder.Entity("TallerMecanica.App.Dominio.Entidades.Cliente", b =>
                {
                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("TallerMecanica.App.Dominio.Entidades.Revision", b =>
                {
                    b.Navigation("SusRepuestos");
                });

            modelBuilder.Entity("TallerMecanica.App.Dominio.Entidades.Tecnico", b =>
                {
                    b.Navigation("SusRevisiones");
                });

            modelBuilder.Entity("TallerMecanica.App.Dominio.Entidades.Vehiculo", b =>
                {
                    b.Navigation("SusRevisiones");
                });
#pragma warning restore 612, 618
        }
    }
}
